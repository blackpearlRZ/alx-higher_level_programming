the ``101-lazy_matrix_mul`` module
===============================

using ``lazy_matrix_mul``
------------------------

This a test file for the lazy_matrix_mul function:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

    >>> print(lazy_matrix_mul([[-1, 2, -3], [3, -2, 1]], [[4, 5, -6], [-6, 5, -4], [-8, -7, -6]]))
    [[  8  26  16]
     [ 16  -2 -16]]

    >>> print(lazy_matrix_mul([[1, 2], [9, 8], [6, 4], [7, 5]], [[7, 5, 8, 1], [7, 6, 4, 2]]))
    [[ 21  17  16   5]
     [119  93 104  25]
     [ 70  54  64  14]
     [ 84  65  76  17]]

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]]))
    [[19 22]
     [43 50]]

    >>> print(lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]]))
    [[ 58  64]
     [139 154]]

    >>> print(lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[7, 8, 9], [10, 11, 12]]))
    [[ 27  30  33]
     [ 61  68  75]
     [ 95 106 117]]

    >>> print(lazy_matrix_mul([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[9, 8, 7], [6, 5, 4], [3, 2, 1]]))
    [[ 30  24  18]
     [ 84  69  54]
     [138 114  90]]

    >>> print(lazy_matrix_mul([[1, 2]], [[3], [4]]))
    [[11]]

    >>> print(lazy_matrix_mul([[1.5, 2.0], [3.0, 4.5]], [[2.0, 1.5], [4.5, 3.0]]))
    [[12.    8.25]
     [26.25 18.  ]]

    >>> print(lazy_matrix_mul([[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]], [[0.9, 1.8], [2.7, 3.6], [4.5, 5.4]]))
    [[21.78 27.72]
     [48.51 63.36]]

==============================================================================================

    >>> print(lazy_matrix_mul([[1, 2]]))
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> print(lazy_matrix_mul())
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

==============================================================================================

    >>> print(lazy_matrix_mul([1, 2, 3], [4, 5, 6]))
    32

    >>> print(lazy_matrix_mul([[1, 2]], [4, 5]))
    [14]

    >>> print(lazy_matrix_mul([[1, 2], "string", 3], [[4, 5], "test"]))
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence

    >>> print(lazy_matrix_mul([[1, 2]], [[4, 5], "test"]))
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence

==============================================================================================

    # Test inside the matrix

    >>> print(lazy_matrix_mul(1, 2))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul([[1]], 2))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul("hello", "world"))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul([[1, 2]], "world"))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

==============================================================================================

    >>> print(lazy_matrix_mul([[1, "Hello"]], [["Wolrd", 4], [1, 3]]))
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

    >>> print(lazy_matrix_mul([[1, 2.4]], [["Wolrd", 4], [1, 3]]))
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

==============================================================================================

    # Test m_a and m_b can't be multiplied

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [2, 1], [3, 7]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

    >>> print(lazy_matrix_mul([[1, 2, 6], [3, 4, 8]], [[2, 1], [3, 7]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)

    >>> print(lazy_matrix_mul([[]], [[1, 2], [3, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

=============================================================================================

    >>> print(lazy_matrix_mul("String", [[1, 2]]))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul([[1, 2]], "String"))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(lazy_matrix_mul("String", "String"))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

=============================================================================================

    >>> print(lazy_matrix_mul(None, None))
    Traceback (most recent call last):
    ...
    TypeError: Object arrays are not currently supported

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[5, "h"], [6, 7]]))
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum
